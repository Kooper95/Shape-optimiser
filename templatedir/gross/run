#!/bin/bash
# call with arguments, ie ./run $1 $2 $3 ...
# where $1, $2, ... can be used in here
#------------------------------------------------------------------------------
#foamVersion="OpenFOAM-8"
. $WM_PROJECT_DIR/bin/tools/RunFunctions



#------------------------------------------------------------------------------
#cd ${0%/*} || exit 1
clear
source clean

#dprepro $1 test.template testing.in 

myvar=$(cat testing.in | awk '{print $1}' ) >/dev/null
echo "Power $(python -c "print(float($myvar))");" > ./0/dataTable

#------------------------------------------------------------------------------
echo -e "\n
Start meshing
------------------------------------------------------------------------------"

#$(cat testing.in | awk '{print $15}' )

#gmsh meshing.geo -3 -o TheMesh.msh -format msh2



gmsh meshing.geo -setnumber b0 $(cat testing.in | awk '{print $3}' ) -setnumber b1 $(cat testing.in | awk '{print $4}' ) -setnumber Rin $(cat testing.in | awk '{print $2}' ) -setnumber Power $(cat testing.in | awk '{print $1}' ) -3 -o TheMesh.msh -format msh2 > meshLog
gmshToFoam TheMesh.msh >/dev/null



extrudeMesh  >/dev/null #> logFile

transformPoints -scale '(.001 .001 .001)' >/dev/null

#------------------------------------------------------------------------------
echo -e "   - Change boundary type to wedge (polyMesh/boundary)"
changeDictionary >/dev/null # >> logFile


#------------------------------------------------------------------------------
echo -e "   - Remove not needed patch entries"
createPatch -overwrite >/dev/null #>> logFile
#topoSet >/dev/null
#checkMesh
#runParallel renumberMesh -overwrite

#------------------------------------------------------------------------------
echo -e "   - parallelize (scotch decomposition)"
decomposePar -force >/dev/null #>> logFile


#------------------------------------------------------------------------------
runParallel $(getApplication) #>/dev/null 


#------------------------------------------------------------------------------
echo -e "   - Reconstruct"
reconstructPar >/dev/null #>> logFile

